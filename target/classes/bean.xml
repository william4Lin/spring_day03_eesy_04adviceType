<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--配置Spring的IOC，把Service对象配置进来-->
    <bean id="accountService" class="com.william.service.impl.AccountServiceImpl"></bean>


    <!--spring中基于XML的AOP配置步骤-->
    <!--配置Logger-->
    <bean id="logger" class="com.william.utils.Logger"></bean>

    <!--配置AOP-->
    <aop:config>
        <!--切入点表达式 id属性用于指定表达式的唯一标识，expression属性用于指定表达式的内容
                此标签卸载aop:aspect标签内部，只能当前切面使用。
                它还可以写在aop:aspect标签外面，此时就变成了所有切面可用
            -->
        <aop:pointcut id="ptl" expression="execution(* com.william.service.impl.*.*(..))"/>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置前置通知：在切入点方法执行之前执行
            <aop:before method="beforePrintLog" pointcut-ref="ptl"></aop:before>
            -->

            <!--配置后置通知：在切入点方法正常执行之后执行，他和异常通知永远只能执行一个
            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="ptl"></aop:after-returning>
            -->

            <!--配置异常通知，在切入点方法正常执行产生异常之后执行，他和后置通知永远只能执行一个
            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="ptl"></aop:after-throwing>
            -->

            <!--配置最终通知，无论切入点方法是否正常执行它都会在其后面执行
            <aop:after method="afterPrintLog" pointcut-ref="ptl"></aop:after>
            -->

            <!--配置环绕通知，详细的说明请看Logger类中-->
            <aop:around method="aroundPrintLog" pointcut-ref="ptl"></aop:around>

        </aop:aspect>

    </aop:config>




</beans>